"""Exceptions that can be generated by the package."""


class JenkinsJobError(Exception):
    pass


class InvalidFindTimerTriggerError(JenkinsJobError):
    """Describe a invalid return from the ``_find_timer_trigger()`` method."""

    def __init__(self, original):
        """Configure the instance.

        :param str original: the error message from the original exception.

        :return nothing
        :rtype None
        """
        self.message = f'Generated by the following error: {original}'


class MissingXMLElementError(JenkinsJobError):
    """Describes a missing XML element that is expected to be available in one
    of the several types of jobs that Jenkins supports."""

    def __init__(self, element, context, job_name):
        """Configure the instance.

        :param str element: the name of the XML element
        :param str context: the XML context
        :param str job_name: the name of the Jenkins job being processed

        :return: nothing
        :rtype: None
        """
        text = 'Could not locate {0} element while searching for {1} in "{2}"'
        self.message = text.format(element, context, job_name)

    def __str__(self):
        return self.message


class UnknownJobTypeError(JenkinsJobError):
    """Exception that describe an unexpected job type that cannot be
    processed."""

    def __init__(self, job_type):
        """Initialize the instance.

        :param str job_type: the name the job type

        :return: nothing
        :rtype: None
        """
        self.job_type = job_type
        self.message = f'Unknown job type "{self.job_type}"'

    def __str__(self):
        return self.message


class InvalidXMLConfigError(JenkinsJobError):
    """Exception for XML that does not have the expected structure when being
    processed."""

    def __init__(self, missing_key):
        """Configure the instance

            :param str missing_key: The missing node on the XML document

            :return: nothing
            :rtype: None
        """
        self.root_key = missing_key
        self.message = f'Unexpected data, missing {missing_key} key in the \
data structure'

    def __str__(self):
        return self.message


class NoSchemaSuppliedRESTError(JenkinsJobError):
    """Exception for Jenkins endpoints without a protocol schema.

    This exception was created to be raised when validation of Jenkins endpoint
    URL occurs with any one of the CLIs that are part of the module.

    Otherwise, Jenkins will cause an exception with the HTTP client that is
    harder to understand:

    ``requests.exceptions.MissingSchema: Invalid URL 'crumbIssuer/api/json':
    No schema supplied. Perhaps you meant http://crumbIssuer/api/json?``
    """

    def __init__(self):
        """Configure the exception.

        No parameters are required or expected.
        """
        self.message = 'No protocol schema (http:// or https://) supplied for \
Jenkins REST endpoint'

    def __str__(self):
        return self.message
